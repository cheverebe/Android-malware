.class public final Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;
.super Ljava/lang/Object;
.source "KeyboardStateImpl.java"

# interfaces
.implements Lcom/touchtype/keyboard/inputeventmodel/KeyboardState;


# annotations
.annotation system Ldalvik/annotation/MemberClasses;
    value = {
        Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl$2;
    }
.end annotation


# instance fields
.field private fluencyPunctuator:Lcom/touchtype_fluency/Punctuator;

.field private mAlwaysComposeWordByWord:Z

.field private mApiCompatibilityLevel:I

.field private mCompletionMode:Z

.field private mCursorMovementUpdatesSelection:Z

.field private mDisableQuickPeriod:Z

.field private mDoesntSupportMoveCursor:Z

.field private mDontUseJumpingCursorMarkers:Z

.field private mDumbInputMode:Z

.field private mEditorClass:I

.field private mEditorFlags:I

.field private mEditorIsMultiLineField:Z

.field private mEditorIsPasswordField:Z

.field private mEditorIsSearchField:Z

.field private mEditorIsUrlField:Z

.field private mEditorVariant:I

.field private mEnabledLanguagePacks:I

.field private mExtractedTextWorks:Z

.field private mFinishComposingTextBreaksCursorPosition:Z

.field private final mFluencyServiceProxy:Lcom/touchtype_fluency/service/FluencyServiceProxy;

.field private mIsCapsLockOn:Z

.field private mIsPreInstalled:Z

.field private mKeyPressModellingEnabled:Z

.field private mLicenseValid:Z

.field private mListenerManager:Lcom/touchtype/keyboard/inputeventmodel/ListenerManager;

.field private mMetaState:J

.field private mMovingOverTrailingSpaceDoesntWork:Z

.field private mNeverAutocomplete:Z

.field private mNeverSetComposingRegion:Z

.field private mOverrideSpaceAssistance:Z

.field private mPredictionEnabled:Z

.field private mPreferences:Lcom/touchtype/preferences/SwiftKeyPreferences;

.field private mPreviousShiftState:Lcom/touchtype/keyboard/service/TouchTypeSoftKeyboard$ShiftState;

.field private mSendKeyCharReturnDeletesComposingRegion:Z

.field private mSetComposingRegionOnlyBeforeEdits:Z

.field private mShiftMode:Lcom/touchtype/keyboard/inputeventmodel/KeyboardState$ShiftMode;

.field private mShiftState:Lcom/touchtype/keyboard/service/TouchTypeSoftKeyboard$ShiftState;

.field private mShiftedAtStartOfFlow:Z

.field private mSoftChordShift:Lcom/touchtype/keyboard/inputeventmodel/KeyboardState$ChordedShift;

.field private mSoftShiftPressed:Z

.field private mStorageAvailable:Z

.field private mTextBeforeCursorWorks:Z

.field private mTextBoxSwitchingUpdatesSelection:Z

.field private mUseShortTextBeforeAfterCursor:Z

.field private mUseTelexConversionLayer:Z

.field private mUseTransactionsForSelectionEvents:Z

.field private mUseZeroWidthSpace:Z


# direct methods
.method public constructor <init>(Lcom/touchtype/keyboard/inputeventmodel/ListenerManager;Lcom/touchtype/preferences/SwiftKeyPreferences;)V
    .locals 4
    .parameter "listenerManager"
    .parameter "preferences"

    .prologue
    const/4 v3, 0x1

    const/4 v2, 0x0

    .line 155
    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    .line 64
    iput v2, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mEditorClass:I

    .line 65
    iput v2, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mEditorVariant:I

    .line 66
    iput v2, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mEditorFlags:I

    .line 67
    iput-boolean v2, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mEditorIsSearchField:Z

    .line 68
    iput-boolean v2, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mEditorIsUrlField:Z

    .line 69
    iput-boolean v2, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mEditorIsPasswordField:Z

    .line 70
    iput-boolean v2, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mEditorIsMultiLineField:Z

    .line 71
    sget-object v0, Lcom/touchtype/keyboard/service/TouchTypeSoftKeyboard$ShiftState;->UNSHIFTED:Lcom/touchtype/keyboard/service/TouchTypeSoftKeyboard$ShiftState;

    iput-object v0, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mShiftState:Lcom/touchtype/keyboard/service/TouchTypeSoftKeyboard$ShiftState;

    .line 72
    sget-object v0, Lcom/touchtype/keyboard/service/TouchTypeSoftKeyboard$ShiftState;->UNSHIFTED:Lcom/touchtype/keyboard/service/TouchTypeSoftKeyboard$ShiftState;

    iput-object v0, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mPreviousShiftState:Lcom/touchtype/keyboard/service/TouchTypeSoftKeyboard$ShiftState;

    .line 73
    sget-object v0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardState$ShiftMode;->NONE:Lcom/touchtype/keyboard/inputeventmodel/KeyboardState$ShiftMode;

    iput-object v0, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mShiftMode:Lcom/touchtype/keyboard/inputeventmodel/KeyboardState$ShiftMode;

    .line 74
    iput-boolean v2, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mSoftShiftPressed:Z

    .line 75
    sget-object v0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardState$ChordedShift;->NONE:Lcom/touchtype/keyboard/inputeventmodel/KeyboardState$ChordedShift;

    iput-object v0, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mSoftChordShift:Lcom/touchtype/keyboard/inputeventmodel/KeyboardState$ChordedShift;

    .line 76
    iput-boolean v2, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mCompletionMode:Z

    .line 77
    iput-boolean v3, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mKeyPressModellingEnabled:Z

    .line 79
    iput-boolean v2, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mPredictionEnabled:Z

    .line 80
    const-wide/16 v0, 0x0

    iput-wide v0, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mMetaState:J

    .line 81
    iput v2, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mEnabledLanguagePacks:I

    .line 82
    iput-boolean v2, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mIsPreInstalled:Z

    .line 83
    iput-boolean v2, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mIsCapsLockOn:Z

    .line 88
    iput-boolean v2, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mAlwaysComposeWordByWord:Z

    .line 89
    iput-boolean v2, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mUseTelexConversionLayer:Z

    .line 90
    iput-boolean v2, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mUseZeroWidthSpace:Z

    .line 91
    iput-boolean v2, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mNeverAutocomplete:Z

    .line 92
    iput-boolean v2, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mDisableQuickPeriod:Z

    .line 94
    sget v0, Landroid/os/Build$VERSION;->SDK_INT:I

    iput v0, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mApiCompatibilityLevel:I

    .line 95
    iput-boolean v2, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mOverrideSpaceAssistance:Z

    .line 96
    iput-boolean v2, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mFinishComposingTextBreaksCursorPosition:Z

    .line 97
    iput-boolean v3, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mCursorMovementUpdatesSelection:Z

    .line 98
    iput-boolean v2, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mSendKeyCharReturnDeletesComposingRegion:Z

    .line 99
    iput-boolean v2, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mDumbInputMode:Z

    .line 100
    iput-boolean v2, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mSetComposingRegionOnlyBeforeEdits:Z

    .line 101
    iput-boolean v2, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mNeverSetComposingRegion:Z

    .line 102
    iput-boolean v2, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mMovingOverTrailingSpaceDoesntWork:Z

    .line 103
    iput-boolean v2, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mExtractedTextWorks:Z

    .line 104
    iput-boolean v2, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mTextBeforeCursorWorks:Z

    .line 105
    iput-boolean v3, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mUseTransactionsForSelectionEvents:Z

    .line 106
    iput-boolean v2, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mUseShortTextBeforeAfterCursor:Z

    .line 107
    iput-boolean v3, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mTextBoxSwitchingUpdatesSelection:Z

    .line 108
    iput-boolean v2, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mShiftedAtStartOfFlow:Z

    .line 113
    const/4 v0, 0x0

    iput-object v0, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->fluencyPunctuator:Lcom/touchtype_fluency/Punctuator;

    .line 115
    new-instance v0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl$1;

    invoke-direct {v0, p0}, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl$1;-><init>(Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;)V

    iput-object v0, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mFluencyServiceProxy:Lcom/touchtype_fluency/service/FluencyServiceProxy;

    .line 156
    iput-object p1, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mListenerManager:Lcom/touchtype/keyboard/inputeventmodel/ListenerManager;

    .line 157
    iput-object p2, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mPreferences:Lcom/touchtype/preferences/SwiftKeyPreferences;

    .line 158
    invoke-static {}, Lcom/touchtype/TouchTypeUtilities;->isStorageAvailable()Z

    move-result v0

    iput-boolean v0, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mStorageAvailable:Z

    .line 159
    return-void
.end method

.method static synthetic access$000(Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;)Lcom/touchtype_fluency/service/FluencyServiceProxy;
    .locals 1
    .parameter "x0"

    .prologue
    .line 56
    iget-object v0, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mFluencyServiceProxy:Lcom/touchtype_fluency/service/FluencyServiceProxy;

    return-object v0
.end method

.method static synthetic access$102(Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;Lcom/touchtype_fluency/Punctuator;)Lcom/touchtype_fluency/Punctuator;
    .locals 0
    .parameter "x0"
    .parameter "x1"

    .prologue
    .line 56
    iput-object p1, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->fluencyPunctuator:Lcom/touchtype_fluency/Punctuator;

    return-object p1
.end method

.method static synthetic access$202(Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;I)I
    .locals 0
    .parameter "x0"
    .parameter "x1"

    .prologue
    .line 56
    iput p1, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mEnabledLanguagePacks:I

    return p1
.end method

.method private determineIfUrlBar()V
    .locals 2

    .prologue
    .line 234
    iget v0, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mEditorVariant:I

    const/16 v1, 0x10

    if-eq v0, v1, :cond_0

    iget v0, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mEditorFlags:I

    const/high16 v1, 0x8

    and-int/2addr v0, v1

    if-nez v0, :cond_1

    iget v0, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mEditorVariant:I

    const/16 v1, 0xb0

    if-ne v0, v1, :cond_1

    :cond_0
    const/4 v0, 0x1

    :goto_0
    iput-boolean v0, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mEditorIsUrlField:Z

    .line 242
    return-void

    .line 234
    :cond_1
    const/4 v0, 0x0

    goto :goto_0
.end method

.method private static getNewShiftMode(ZIII)Lcom/touchtype/keyboard/inputeventmodel/KeyboardState$ShiftMode;
    .locals 2
    .parameter "autoCapitalization"
    .parameter "edClass"
    .parameter "edVariant"
    .parameter "edFlags"

    .prologue
    .line 275
    sget-object v0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardState$ShiftMode;->NONE:Lcom/touchtype/keyboard/inputeventmodel/KeyboardState$ShiftMode;

    .line 277
    .local v0, newShiftMode:Lcom/touchtype/keyboard/inputeventmodel/KeyboardState$ShiftMode;
    if-eqz p0, :cond_0

    .line 278
    packed-switch p1, :pswitch_data_0

    .line 305
    :cond_0
    :goto_0
    invoke-static {v0}, Ljunit/framework/Assert;->assertNotNull(Ljava/lang/Object;)V

    .line 306
    return-object v0

    .line 281
    :pswitch_0
    and-int/lit16 v1, p3, 0x1000

    if-eqz v1, :cond_1

    .line 282
    sget-object v0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardState$ShiftMode;->CHARACTERS:Lcom/touchtype/keyboard/inputeventmodel/KeyboardState$ShiftMode;

    goto :goto_0

    .line 284
    :cond_1
    and-int/lit16 v1, p3, 0x2000

    if-nez v1, :cond_2

    const/16 v1, 0x60

    if-eq p2, v1, :cond_2

    const/16 v1, 0x70

    if-ne p2, v1, :cond_3

    .line 288
    :cond_2
    sget-object v0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardState$ShiftMode;->WORDS:Lcom/touchtype/keyboard/inputeventmodel/KeyboardState$ShiftMode;

    goto :goto_0

    .line 290
    :cond_3
    and-int/lit16 v1, p3, 0x4000

    if-nez v1, :cond_4

    const/16 v1, 0x40

    if-eq p2, v1, :cond_4

    const/16 v1, 0x50

    if-eq p2, v1, :cond_4

    const/16 v1, 0x30

    if-eq p2, v1, :cond_4

    const/16 v1, 0xa0

    if-eq p2, v1, :cond_4

    const/high16 v1, 0x2

    and-int/2addr v1, p3

    if-nez v1, :cond_4

    const/high16 v1, 0x4

    and-int/2addr v1, p3

    if-eqz v1, :cond_0

    .line 298
    :cond_4
    sget-object v0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardState$ShiftMode;->SENTENCES:Lcom/touchtype/keyboard/inputeventmodel/KeyboardState$ShiftMode;

    goto :goto_0

    .line 278
    :pswitch_data_0
    .packed-switch 0x1
        :pswitch_0
    .end packed-switch
.end method

.method private getNewShiftState(Lcom/touchtype/keyboard/inputeventmodel/KeyboardState$ShiftMode;IIZ)Lcom/touchtype/keyboard/service/TouchTypeSoftKeyboard$ShiftState;
    .locals 3
    .parameter "shiftMode"
    .parameter "edVariant"
    .parameter "cursorPosition"
    .parameter "initialCapsHint"

    .prologue
    .line 245
    iget-boolean v1, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mIsCapsLockOn:Z

    if-eqz v1, :cond_0

    .line 248
    sget-object v0, Lcom/touchtype/keyboard/service/TouchTypeSoftKeyboard$ShiftState;->CAPSLOCKED:Lcom/touchtype/keyboard/service/TouchTypeSoftKeyboard$ShiftState;

    .line 270
    .local v0, newShiftState:Lcom/touchtype/keyboard/service/TouchTypeSoftKeyboard$ShiftState;
    :goto_0
    invoke-static {v0}, Ljunit/framework/Assert;->assertNotNull(Ljava/lang/Object;)V

    .line 271
    return-object v0

    .line 250
    .end local v0           #newShiftState:Lcom/touchtype/keyboard/service/TouchTypeSoftKeyboard$ShiftState;
    :cond_0
    sget-object v1, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl$2;->$SwitchMap$com$touchtype$keyboard$inputeventmodel$KeyboardState$ShiftMode:[I

    invoke-virtual {p1}, Lcom/touchtype/keyboard/inputeventmodel/KeyboardState$ShiftMode;->ordinal()I

    move-result v2

    aget v1, v1, v2

    packed-switch v1, :pswitch_data_0

    .line 258
    const/16 v1, 0x80

    if-eq p2, v1, :cond_1

    const/16 v1, 0xe0

    if-eq p2, v1, :cond_1

    if-lez p3, :cond_2

    if-nez p4, :cond_2

    .line 262
    :cond_1
    sget-object v0, Lcom/touchtype/keyboard/service/TouchTypeSoftKeyboard$ShiftState;->UNSHIFTED:Lcom/touchtype/keyboard/service/TouchTypeSoftKeyboard$ShiftState;

    .restart local v0       #newShiftState:Lcom/touchtype/keyboard/service/TouchTypeSoftKeyboard$ShiftState;
    goto :goto_0

    .line 252
    .end local v0           #newShiftState:Lcom/touchtype/keyboard/service/TouchTypeSoftKeyboard$ShiftState;
    :pswitch_0
    sget-object v0, Lcom/touchtype/keyboard/service/TouchTypeSoftKeyboard$ShiftState;->UNSHIFTED:Lcom/touchtype/keyboard/service/TouchTypeSoftKeyboard$ShiftState;

    .line 253
    .restart local v0       #newShiftState:Lcom/touchtype/keyboard/service/TouchTypeSoftKeyboard$ShiftState;
    goto :goto_0

    .line 255
    .end local v0           #newShiftState:Lcom/touchtype/keyboard/service/TouchTypeSoftKeyboard$ShiftState;
    :pswitch_1
    sget-object v0, Lcom/touchtype/keyboard/service/TouchTypeSoftKeyboard$ShiftState;->CAPSLOCKED:Lcom/touchtype/keyboard/service/TouchTypeSoftKeyboard$ShiftState;

    .line 256
    .restart local v0       #newShiftState:Lcom/touchtype/keyboard/service/TouchTypeSoftKeyboard$ShiftState;
    goto :goto_0

    .line 264
    .end local v0           #newShiftState:Lcom/touchtype/keyboard/service/TouchTypeSoftKeyboard$ShiftState;
    :cond_2
    sget-object v0, Lcom/touchtype/keyboard/service/TouchTypeSoftKeyboard$ShiftState;->SHIFTED:Lcom/touchtype/keyboard/service/TouchTypeSoftKeyboard$ShiftState;

    .restart local v0       #newShiftState:Lcom/touchtype/keyboard/service/TouchTypeSoftKeyboard$ShiftState;
    goto :goto_0

    .line 250
    nop

    :pswitch_data_0
    .packed-switch 0x1
        :pswitch_0
        :pswitch_1
    .end packed-switch
.end method

.method private updateCapsLockState(Landroid/view/KeyEvent;)V
    .locals 2
    .parameter "event"

    .prologue
    .line 524
    sget v0, Landroid/os/Build$VERSION;->SDK_INT:I

    const/16 v1, 0xb

    if-lt v0, v1, :cond_0

    .line 526
    invoke-virtual {p1}, Landroid/view/KeyEvent;->getKeyCode()I

    move-result v0

    const/16 v1, 0x73

    if-ne v0, v1, :cond_2

    .line 527
    iget-boolean v0, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mIsCapsLockOn:Z

    if-nez v0, :cond_1

    const/4 v0, 0x1

    :goto_0
    iput-boolean v0, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mIsCapsLockOn:Z

    .line 532
    :cond_0
    :goto_1
    return-void

    .line 527
    :cond_1
    const/4 v0, 0x0

    goto :goto_0

    .line 529
    :cond_2
    invoke-virtual {p1}, Landroid/view/KeyEvent;->isCapsLockOn()Z

    move-result v0

    iput-boolean v0, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mIsCapsLockOn:Z

    goto :goto_1
.end method


# virtual methods
.method public composeTextWordByWord()Z
    .locals 1

    .prologue
    .line 789
    iget-boolean v0, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mAlwaysComposeWordByWord:Z

    if-nez v0, :cond_0

    invoke-virtual {p0}, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->isPredictionEnabled()Z

    move-result v0

    if-eqz v0, :cond_1

    :cond_0
    const/4 v0, 0x1

    :goto_0
    return v0

    :cond_1
    const/4 v0, 0x0

    goto :goto_0
.end method

.method public cursorMovementUpdatesSelection()Z
    .locals 1

    .prologue
    .line 769
    iget-boolean v0, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mCursorMovementUpdatesSelection:Z

    return v0
.end method

.method public doesntSupportMoveCursor()Z
    .locals 1

    .prologue
    .line 840
    iget-boolean v0, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mDoesntSupportMoveCursor:Z

    return v0
.end method

.method public dontUseJumpingCursorMarkers()Z
    .locals 1

    .prologue
    .line 845
    iget-boolean v0, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mDontUseJumpingCursorMarkers:Z

    return v0
.end method

.method public extractedTextWorks()Z
    .locals 1

    .prologue
    .line 795
    iget-boolean v0, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mExtractedTextWorks:Z

    return v0
.end method

.method public finishComposingTextBreaksCursorPosition()Z
    .locals 1

    .prologue
    .line 764
    iget-boolean v0, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mFinishComposingTextBreaksCursorPosition:Z

    return v0
.end method

.method public getApiCompatibiltyLevel()I
    .locals 1

    .prologue
    .line 749
    iget v0, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mApiCompatibilityLevel:I

    return v0
.end method

.method public getAutocompleteMode()I
    .locals 1

    .prologue
    .line 179
    iget-object v0, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mPreferences:Lcom/touchtype/preferences/SwiftKeyPreferences;

    invoke-interface {v0}, Lcom/touchtype/preferences/SwiftKeyPreferences;->getAutoCompleteMode()I

    move-result v0

    return v0
.end method

.method public getCapitalisationState(Lcom/touchtype_fluency/ResultsFilter$CapitalizationHint;)Lcom/touchtype_fluency/ResultsFilter$CapitalizationHint;
    .locals 4
    .parameter "hintOnOriginalPrediction"

    .prologue
    .line 444
    sget-object v0, Lcom/touchtype_fluency/ResultsFilter$CapitalizationHint;->LOWER_CASE:Lcom/touchtype_fluency/ResultsFilter$CapitalizationHint;

    .line 445
    .local v0, capitalization:Lcom/touchtype_fluency/ResultsFilter$CapitalizationHint;
    invoke-virtual {p0}, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->getShiftState()Lcom/touchtype/keyboard/service/TouchTypeSoftKeyboard$ShiftState;

    move-result-object v1

    .line 446
    .local v1, shiftState:Lcom/touchtype/keyboard/service/TouchTypeSoftKeyboard$ShiftState;
    sget-object v2, Lcom/touchtype/keyboard/service/TouchTypeSoftKeyboard$ShiftState;->UNSHIFTED:Lcom/touchtype/keyboard/service/TouchTypeSoftKeyboard$ShiftState;

    if-ne v1, v2, :cond_1

    sget-object v2, Lcom/touchtype_fluency/ResultsFilter$CapitalizationHint;->LOWER_CASE:Lcom/touchtype_fluency/ResultsFilter$CapitalizationHint;

    if-eq p1, v2, :cond_1

    .line 447
    sget-object v0, Lcom/touchtype_fluency/ResultsFilter$CapitalizationHint;->INITIAL_UPPER_CASE:Lcom/touchtype_fluency/ResultsFilter$CapitalizationHint;

    .line 454
    :cond_0
    :goto_0
    return-object v0

    .line 448
    :cond_1
    sget-object v2, Lcom/touchtype/keyboard/service/TouchTypeSoftKeyboard$ShiftState;->CAPSLOCKED:Lcom/touchtype/keyboard/service/TouchTypeSoftKeyboard$ShiftState;

    if-eq v1, v2, :cond_2

    invoke-virtual {p0}, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->getShiftMode()Lcom/touchtype/keyboard/inputeventmodel/KeyboardState$ShiftMode;

    move-result-object v2

    sget-object v3, Lcom/touchtype/keyboard/inputeventmodel/KeyboardState$ShiftMode;->CHARACTERS:Lcom/touchtype/keyboard/inputeventmodel/KeyboardState$ShiftMode;

    if-ne v2, v3, :cond_3

    .line 449
    :cond_2
    sget-object v0, Lcom/touchtype_fluency/ResultsFilter$CapitalizationHint;->UPPER_CASE:Lcom/touchtype_fluency/ResultsFilter$CapitalizationHint;

    goto :goto_0

    .line 450
    :cond_3
    sget-object v2, Lcom/touchtype/keyboard/service/TouchTypeSoftKeyboard$ShiftState;->SHIFTED:Lcom/touchtype/keyboard/service/TouchTypeSoftKeyboard$ShiftState;

    if-ne v1, v2, :cond_0

    .line 451
    sget-object v0, Lcom/touchtype_fluency/ResultsFilter$CapitalizationHint;->INITIAL_UPPER_CASE:Lcom/touchtype_fluency/ResultsFilter$CapitalizationHint;

    goto :goto_0
.end method

.method public getCapitalisationState(Ljava/lang/String;)Lcom/touchtype_fluency/ResultsFilter$CapitalizationHint;
    .locals 4
    .parameter "currentWord"

    .prologue
    .line 424
    sget-object v0, Lcom/touchtype_fluency/ResultsFilter$CapitalizationHint;->LOWER_CASE:Lcom/touchtype_fluency/ResultsFilter$CapitalizationHint;

    .line 425
    .local v0, capitalization:Lcom/touchtype_fluency/ResultsFilter$CapitalizationHint;
    invoke-virtual {p0}, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->getShiftState()Lcom/touchtype/keyboard/service/TouchTypeSoftKeyboard$ShiftState;

    move-result-object v1

    .line 426
    .local v1, shiftState:Lcom/touchtype/keyboard/service/TouchTypeSoftKeyboard$ShiftState;
    sget-object v2, Lcom/touchtype/keyboard/service/TouchTypeSoftKeyboard$ShiftState;->UNSHIFTED:Lcom/touchtype/keyboard/service/TouchTypeSoftKeyboard$ShiftState;

    if-ne v1, v2, :cond_2

    if-eqz p1, :cond_2

    .line 427
    invoke-virtual {p1}, Ljava/lang/String;->length()I

    move-result v2

    if-lez v2, :cond_1

    const/4 v2, 0x0

    invoke-virtual {p1, v2}, Ljava/lang/String;->charAt(I)C

    move-result v2

    invoke-static {v2}, Ljava/lang/Character;->isUpperCase(C)Z

    move-result v2

    if-eqz v2, :cond_1

    .line 428
    sget-object v0, Lcom/touchtype_fluency/ResultsFilter$CapitalizationHint;->INITIAL_UPPER_CASE:Lcom/touchtype_fluency/ResultsFilter$CapitalizationHint;

    .line 439
    :cond_0
    :goto_0
    return-object v0

    .line 430
    :cond_1
    iget-boolean v2, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mShiftedAtStartOfFlow:Z

    if-eqz v2, :cond_0

    .line 431
    sget-object v0, Lcom/touchtype_fluency/ResultsFilter$CapitalizationHint;->INITIAL_UPPER_CASE:Lcom/touchtype_fluency/ResultsFilter$CapitalizationHint;

    goto :goto_0

    .line 433
    :cond_2
    sget-object v2, Lcom/touchtype/keyboard/service/TouchTypeSoftKeyboard$ShiftState;->CAPSLOCKED:Lcom/touchtype/keyboard/service/TouchTypeSoftKeyboard$ShiftState;

    if-eq v1, v2, :cond_3

    invoke-virtual {p0}, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->getShiftMode()Lcom/touchtype/keyboard/inputeventmodel/KeyboardState$ShiftMode;

    move-result-object v2

    sget-object v3, Lcom/touchtype/keyboard/inputeventmodel/KeyboardState$ShiftMode;->CHARACTERS:Lcom/touchtype/keyboard/inputeventmodel/KeyboardState$ShiftMode;

    if-ne v2, v3, :cond_4

    .line 434
    :cond_3
    sget-object v0, Lcom/touchtype_fluency/ResultsFilter$CapitalizationHint;->UPPER_CASE:Lcom/touchtype_fluency/ResultsFilter$CapitalizationHint;

    goto :goto_0

    .line 435
    :cond_4
    sget-object v2, Lcom/touchtype/keyboard/service/TouchTypeSoftKeyboard$ShiftState;->SHIFTED:Lcom/touchtype/keyboard/service/TouchTypeSoftKeyboard$ShiftState;

    if-ne v1, v2, :cond_0

    .line 436
    sget-object v0, Lcom/touchtype_fluency/ResultsFilter$CapitalizationHint;->INITIAL_UPPER_CASE:Lcom/touchtype_fluency/ResultsFilter$CapitalizationHint;

    goto :goto_0
.end method

.method public getInitialShiftState()Lcom/touchtype/keyboard/service/TouchTypeSoftKeyboard$ShiftState;
    .locals 3

    .prologue
    const/4 v2, 0x0

    .line 311
    iget-object v0, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mShiftMode:Lcom/touchtype/keyboard/inputeventmodel/KeyboardState$ShiftMode;

    iget v1, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mEditorVariant:I

    invoke-direct {p0, v0, v1, v2, v2}, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->getNewShiftState(Lcom/touchtype/keyboard/inputeventmodel/KeyboardState$ShiftMode;IIZ)Lcom/touchtype/keyboard/service/TouchTypeSoftKeyboard$ShiftState;

    move-result-object v0

    return-object v0
.end method

.method public getMetaState()I
    .locals 2

    .prologue
    .line 470
    iget-wide v0, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mMetaState:J

    invoke-static {v0, v1}, Lcom/touchtype/keyboard/service/MetaKeyKeyListenerProxy;->getMetaState(J)I

    move-result v0

    return v0
.end method

.method public getPunctuator()Lcom/touchtype_fluency/Punctuator;
    .locals 1

    .prologue
    .line 418
    iget-object v0, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->fluencyPunctuator:Lcom/touchtype_fluency/Punctuator;

    return-object v0
.end method

.method public getShiftMode()Lcom/touchtype/keyboard/inputeventmodel/KeyboardState$ShiftMode;
    .locals 1

    .prologue
    .line 465
    iget-object v0, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mShiftMode:Lcom/touchtype/keyboard/inputeventmodel/KeyboardState$ShiftMode;

    return-object v0
.end method

.method public getShiftState()Lcom/touchtype/keyboard/service/TouchTypeSoftKeyboard$ShiftState;
    .locals 1

    .prologue
    .line 460
    iget-object v0, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mShiftState:Lcom/touchtype/keyboard/service/TouchTypeSoftKeyboard$ShiftState;

    return-object v0
.end method

.method public isCapsLockOn()Z
    .locals 1

    .prologue
    .line 495
    iget-boolean v0, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mIsCapsLockOn:Z

    return v0
.end method

.method public isCompletionModeEnabled()Z
    .locals 1

    .prologue
    .line 480
    iget-boolean v0, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mCompletionMode:Z

    return v0
.end method

.method public isDumbInputMode()Z
    .locals 1

    .prologue
    .line 779
    iget-boolean v0, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mDumbInputMode:Z

    return v0
.end method

.method public isEditSpacingAssistanceDisabled()Z
    .locals 1

    .prologue
    .line 754
    iget-boolean v0, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mOverrideSpaceAssistance:Z

    return v0
.end method

.method public isKeyPressModellingEnabled()Z
    .locals 1

    .prologue
    .line 490
    iget-boolean v0, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mKeyPressModellingEnabled:Z

    return v0
.end method

.method public isLicenseValid()Z
    .locals 1

    .prologue
    .line 512
    iget-boolean v0, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mLicenseValid:Z

    return v0
.end method

.method public isMultiLineField()Z
    .locals 1

    .prologue
    .line 226
    iget-boolean v0, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mEditorIsMultiLineField:Z

    return v0
.end method

.method public isPredictionEnabled()Z
    .locals 1

    .prologue
    .line 215
    iget-boolean v0, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mPredictionEnabled:Z

    if-eqz v0, :cond_0

    iget-boolean v0, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mStorageAvailable:Z

    if-eqz v0, :cond_0

    const/4 v0, 0x1

    :goto_0
    return v0

    :cond_0
    const/4 v0, 0x0

    goto :goto_0
.end method

.method public isQuickPeriodOn()Z
    .locals 1

    .prologue
    .line 207
    iget-object v0, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mPreferences:Lcom/touchtype/preferences/SwiftKeyPreferences;

    invoke-interface {v0}, Lcom/touchtype/preferences/SwiftKeyPreferences;->isQuickPeriodOn()Z

    move-result v0

    if-eqz v0, :cond_0

    iget-boolean v0, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mDisableQuickPeriod:Z

    if-nez v0, :cond_0

    const/4 v0, 0x1

    :goto_0
    return v0

    :cond_0
    const/4 v0, 0x0

    goto :goto_0
.end method

.method public isSearchField()Z
    .locals 1

    .prologue
    .line 220
    iget-boolean v0, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mEditorIsSearchField:Z

    return v0
.end method

.method public isSoftShiftPressed()Z
    .locals 1

    .prologue
    .line 650
    iget-boolean v0, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mSoftShiftPressed:Z

    return v0
.end method

.method public isUrlBar()Z
    .locals 1

    .prologue
    .line 230
    iget-boolean v0, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mEditorIsUrlField:Z

    return v0
.end method

.method public movingOverTrailingSpaceDoesntWork()Z
    .locals 1

    .prologue
    .line 810
    iget-boolean v0, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mMovingOverTrailingSpaceDoesntWork:Z

    return v0
.end method

.method public neverSetComposingRegion()Z
    .locals 1

    .prologue
    .line 805
    iget-boolean v0, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mNeverSetComposingRegion:Z

    return v0
.end method

.method public notifyNewEditorInfo(Landroid/view/inputmethod/EditorInfo;ZZZ)V
    .locals 10
    .parameter "editorInfo"
    .parameter "extractedTextWorks"
    .parameter "textBeforeCursorWorks"
    .parameter "restarting"

    .prologue
    const/16 v9, 0xe0

    const/16 v8, 0x80

    const/4 v4, 0x1

    const/4 v5, 0x0

    .line 324
    iput-boolean p2, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mExtractedTextWorks:Z

    .line 325
    iput-boolean p3, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mTextBeforeCursorWorks:Z

    .line 327
    invoke-static {p1}, Lcom/touchtype/keyboard/inputeventmodel/EditorInfoUtils;->correctEditorInfo(Landroid/view/inputmethod/EditorInfo;)Lcom/touchtype/keyboard/inputeventmodel/EditorInfoUtils$AnnotatedEditorInfo;

    move-result-object v0

    .line 328
    .local v0, annotatedEditorInfo:Lcom/touchtype/keyboard/inputeventmodel/EditorInfoUtils$AnnotatedEditorInfo;
    iget-object p1, v0, Lcom/touchtype/keyboard/inputeventmodel/EditorInfoUtils$AnnotatedEditorInfo;->editorInfo:Landroid/view/inputmethod/EditorInfo;

    .line 330
    iget v3, v0, Lcom/touchtype/keyboard/inputeventmodel/EditorInfoUtils$AnnotatedEditorInfo;->apiCompatibilityLevel:I

    iput v3, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mApiCompatibilityLevel:I

    .line 331
    iget-boolean v3, v0, Lcom/touchtype/keyboard/inputeventmodel/EditorInfoUtils$AnnotatedEditorInfo;->disablePredictionSpaceReuse:Z

    iput-boolean v3, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mOverrideSpaceAssistance:Z

    .line 332
    iget-boolean v3, v0, Lcom/touchtype/keyboard/inputeventmodel/EditorInfoUtils$AnnotatedEditorInfo;->finishComposingTextBreaksCursorPosition:Z

    iput-boolean v3, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mFinishComposingTextBreaksCursorPosition:Z

    .line 333
    iget-boolean v3, v0, Lcom/touchtype/keyboard/inputeventmodel/EditorInfoUtils$AnnotatedEditorInfo;->cursorMovementUpdatesSelection:Z

    iput-boolean v3, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mCursorMovementUpdatesSelection:Z

    .line 334
    iget-boolean v3, v0, Lcom/touchtype/keyboard/inputeventmodel/EditorInfoUtils$AnnotatedEditorInfo;->sendKeyCharReturnDeletesComposingRegion:Z

    iput-boolean v3, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mSendKeyCharReturnDeletesComposingRegion:Z

    .line 335
    iget-boolean v3, v0, Lcom/touchtype/keyboard/inputeventmodel/EditorInfoUtils$AnnotatedEditorInfo;->setComposingRegionOnlyBeforeEdits:Z

    iput-boolean v3, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mSetComposingRegionOnlyBeforeEdits:Z

    .line 336
    iget-boolean v3, v0, Lcom/touchtype/keyboard/inputeventmodel/EditorInfoUtils$AnnotatedEditorInfo;->neverSetComposingRegion:Z

    iput-boolean v3, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mNeverSetComposingRegion:Z

    .line 337
    iget-boolean v3, v0, Lcom/touchtype/keyboard/inputeventmodel/EditorInfoUtils$AnnotatedEditorInfo;->movingOverTrailingSpaceDoesntWork:Z

    iput-boolean v3, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mMovingOverTrailingSpaceDoesntWork:Z

    .line 338
    iget-boolean v3, v0, Lcom/touchtype/keyboard/inputeventmodel/EditorInfoUtils$AnnotatedEditorInfo;->useTransactionsForSelectionEvents:Z

    iput-boolean v3, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mUseTransactionsForSelectionEvents:Z

    .line 339
    iget-boolean v3, v0, Lcom/touchtype/keyboard/inputeventmodel/EditorInfoUtils$AnnotatedEditorInfo;->useShortTextBeforeAfterCursor:Z

    iput-boolean v3, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mUseShortTextBeforeAfterCursor:Z

    .line 340
    iget-boolean v3, v0, Lcom/touchtype/keyboard/inputeventmodel/EditorInfoUtils$AnnotatedEditorInfo;->textBoxSwitchingUpdatesSelection:Z

    iput-boolean v3, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mTextBoxSwitchingUpdatesSelection:Z

    .line 341
    iget-boolean v3, v0, Lcom/touchtype/keyboard/inputeventmodel/EditorInfoUtils$AnnotatedEditorInfo;->doesntSupportMoveCursor:Z

    iput-boolean v3, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mDoesntSupportMoveCursor:Z

    .line 342
    iget-boolean v3, v0, Lcom/touchtype/keyboard/inputeventmodel/EditorInfoUtils$AnnotatedEditorInfo;->dontUseJumpingCursorMarkers:Z

    iput-boolean v3, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mDontUseJumpingCursorMarkers:Z

    .line 345
    invoke-static {p1}, Lcom/touchtype/keyboard/inputeventmodel/EditorInfoUtils;->isValidEditorInfo(Landroid/view/inputmethod/EditorInfo;)Z

    move-result v3

    if-eqz v3, :cond_9

    .line 346
    iput-boolean v5, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mDumbInputMode:Z

    .line 348
    iget v3, p1, Landroid/view/inputmethod/EditorInfo;->inputType:I

    and-int/lit8 v3, v3, 0xf

    iput v3, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mEditorClass:I

    .line 349
    iget v3, p1, Landroid/view/inputmethod/EditorInfo;->inputType:I

    and-int/lit16 v3, v3, 0xff0

    iput v3, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mEditorVariant:I

    .line 350
    iget v3, p1, Landroid/view/inputmethod/EditorInfo;->inputType:I

    const v6, 0xfff000

    and-int/2addr v3, v6

    iput v3, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mEditorFlags:I

    .line 352
    iget v3, p1, Landroid/view/inputmethod/EditorInfo;->imeOptions:I

    and-int/lit16 v3, v3, 0xff

    const/4 v6, 0x3

    if-ne v3, v6, :cond_4

    move v3, v4

    :goto_0
    iput-boolean v3, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mEditorIsSearchField:Z

    .line 355
    iget v3, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mEditorVariant:I

    if-eq v3, v8, :cond_0

    iget v3, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mEditorVariant:I

    if-ne v3, v9, :cond_5

    :cond_0
    move v3, v4

    :goto_1
    iput-boolean v3, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mEditorIsPasswordField:Z

    .line 360
    iget v3, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mEditorFlags:I

    const/high16 v6, 0x6

    and-int/2addr v3, v6

    if-eqz v3, :cond_6

    move v3, v4

    :goto_2
    iput-boolean v3, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mEditorIsMultiLineField:Z

    .line 362
    iget-object v3, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mPreferences:Lcom/touchtype/preferences/SwiftKeyPreferences;

    invoke-interface {v3}, Lcom/touchtype/preferences/SwiftKeyPreferences;->isAutoCapitalizationEnabled()Z

    move-result v1

    .line 364
    .local v1, autoCapitalization:Z
    iget v3, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mEditorClass:I

    iget v6, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mEditorVariant:I

    iget v7, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mEditorFlags:I

    invoke-static {v1, v3, v6, v7}, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->getNewShiftMode(ZIII)Lcom/touchtype/keyboard/inputeventmodel/KeyboardState$ShiftMode;

    move-result-object v3

    iput-object v3, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mShiftMode:Lcom/touchtype/keyboard/inputeventmodel/KeyboardState$ShiftMode;

    .line 365
    invoke-virtual {p0}, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->isLicenseValid()Z

    move-result v3

    if-eqz v3, :cond_7

    iget-object v3, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mPreferences:Lcom/touchtype/preferences/SwiftKeyPreferences;

    const-string v6, "pref_install_state"

    invoke-interface {v3, v6, v5}, Lcom/touchtype/preferences/SwiftKeyPreferences;->getInt(Ljava/lang/String;I)I

    move-result v3

    const/4 v6, -0x1

    if-ne v3, v6, :cond_7

    iget v3, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mEnabledLanguagePacks:I

    if-gtz v3, :cond_1

    iget-boolean v3, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mIsPreInstalled:Z

    if-nez v3, :cond_7

    :cond_1
    iget v3, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mEditorClass:I

    if-ne v3, v4, :cond_7

    iget v3, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mEditorVariant:I

    const/16 v6, 0x20

    if-eq v3, v6, :cond_7

    iget v3, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mEditorVariant:I

    if-eq v3, v8, :cond_7

    iget v3, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mEditorVariant:I

    const/16 v6, 0x90

    if-eq v3, v6, :cond_7

    iget v3, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mEditorVariant:I

    const/16 v6, 0xd0

    if-eq v3, v6, :cond_7

    iget v3, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mEditorVariant:I

    if-eq v3, v9, :cond_7

    iget v3, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mEditorFlags:I

    const/high16 v6, 0x1

    and-int/2addr v3, v6

    if-eqz v3, :cond_2

    sget v3, Landroid/os/Build$VERSION;->SDK_INT:I

    const/16 v6, 0x9

    if-lt v3, v6, :cond_7

    :cond_2
    iget-boolean v3, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mExtractedTextWorks:Z

    if-nez v3, :cond_3

    iget-boolean v3, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mTextBeforeCursorWorks:Z

    if-eqz v3, :cond_7

    iget-boolean v3, v0, Lcom/touchtype/keyboard/inputeventmodel/EditorInfoUtils$AnnotatedEditorInfo;->enablePredictionsWhenOnlyTextBeforeCursorWorks:Z

    if-eqz v3, :cond_7

    :cond_3
    iget-boolean v3, v0, Lcom/touchtype/keyboard/inputeventmodel/EditorInfoUtils$AnnotatedEditorInfo;->forceDisablePredictions:Z

    if-nez v3, :cond_7

    move v3, v4

    :goto_3
    iput-boolean v3, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mPredictionEnabled:Z

    .line 380
    iget-object v3, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mShiftMode:Lcom/touchtype/keyboard/inputeventmodel/KeyboardState$ShiftMode;

    iget v6, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mEditorVariant:I

    iget v7, p1, Landroid/view/inputmethod/EditorInfo;->initialSelStart:I

    iget v8, p1, Landroid/view/inputmethod/EditorInfo;->initialCapsMode:I

    if-eqz v8, :cond_8

    :goto_4
    invoke-direct {p0, v3, v6, v7, v4}, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->getNewShiftState(Lcom/touchtype/keyboard/inputeventmodel/KeyboardState$ShiftMode;IIZ)Lcom/touchtype/keyboard/service/TouchTypeSoftKeyboard$ShiftState;

    move-result-object v2

    .line 387
    .local v2, newShiftState:Lcom/touchtype/keyboard/service/TouchTypeSoftKeyboard$ShiftState;
    invoke-direct {p0}, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->determineIfUrlBar()V

    .line 405
    .end local v1           #autoCapitalization:Z
    :goto_5
    iget-object v3, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mListenerManager:Lcom/touchtype/keyboard/inputeventmodel/ListenerManager;

    invoke-virtual {p0}, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->isPredictionEnabled()Z

    move-result v4

    invoke-virtual {v3, v4}, Lcom/touchtype/keyboard/inputeventmodel/ListenerManager;->notifyPredictionsEnabledListener(Z)V

    .line 406
    invoke-virtual {p0, v2}, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->setShiftState(Lcom/touchtype/keyboard/service/TouchTypeSoftKeyboard$ShiftState;)V

    .line 414
    return-void

    .end local v2           #newShiftState:Lcom/touchtype/keyboard/service/TouchTypeSoftKeyboard$ShiftState;
    :cond_4
    move v3, v5

    .line 352
    goto/16 :goto_0

    :cond_5
    move v3, v5

    .line 355
    goto/16 :goto_1

    :cond_6
    move v3, v5

    .line 360
    goto/16 :goto_2

    .restart local v1       #autoCapitalization:Z
    :cond_7
    move v3, v5

    .line 365
    goto :goto_3

    :cond_8
    move v4, v5

    .line 380
    goto :goto_4

    .line 390
    .end local v1           #autoCapitalization:Z
    :cond_9
    iput-boolean v4, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mDumbInputMode:Z

    .line 393
    iput v5, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mEditorClass:I

    .line 394
    iput v5, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mEditorVariant:I

    .line 395
    iput v5, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mEditorFlags:I

    .line 396
    iput-boolean v5, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mEditorIsSearchField:Z

    .line 397
    iput-boolean v5, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mEditorIsUrlField:Z

    .line 398
    iput-boolean v5, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mEditorIsPasswordField:Z

    .line 399
    iput-boolean v5, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mPredictionEnabled:Z

    .line 400
    sget-object v3, Lcom/touchtype/keyboard/inputeventmodel/KeyboardState$ShiftMode;->NONE:Lcom/touchtype/keyboard/inputeventmodel/KeyboardState$ShiftMode;

    iput-object v3, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mShiftMode:Lcom/touchtype/keyboard/inputeventmodel/KeyboardState$ShiftMode;

    .line 401
    sget-object v2, Lcom/touchtype/keyboard/service/TouchTypeSoftKeyboard$ShiftState;->UNSHIFTED:Lcom/touchtype/keyboard/service/TouchTypeSoftKeyboard$ShiftState;

    .restart local v2       #newShiftState:Lcom/touchtype/keyboard/service/TouchTypeSoftKeyboard$ShiftState;
    goto :goto_5
.end method

.method public onCreate(Landroid/content/Context;)V
    .locals 2
    .parameter "context"

    .prologue
    .line 163
    iget-object v0, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mFluencyServiceProxy:Lcom/touchtype_fluency/service/FluencyServiceProxy;

    invoke-virtual {v0, p1}, Lcom/touchtype_fluency/service/FluencyServiceProxy;->onCreate(Landroid/content/Context;)V

    .line 164
    iget-object v0, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mPreferences:Lcom/touchtype/preferences/SwiftKeyPreferences;

    invoke-interface {v0}, Lcom/touchtype/preferences/SwiftKeyPreferences;->isLicenseValid()Z

    move-result v0

    iput-boolean v0, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mLicenseValid:Z

    .line 166
    :try_start_0
    invoke-virtual {p1}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v0

    const v1, 0x7f080025

    invoke-virtual {v0, v1}, Landroid/content/res/Resources;->getBoolean(I)Z

    move-result v0

    iput-boolean v0, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mIsPreInstalled:Z
    :try_end_0
    .catch Landroid/content/res/Resources$NotFoundException; {:try_start_0 .. :try_end_0} :catch_0

    .line 170
    :goto_0
    return-void

    .line 168
    :catch_0
    move-exception v0

    const/4 v0, 0x0

    iput-boolean v0, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mIsPreInstalled:Z

    goto :goto_0
.end method

.method public onDestroy(Landroid/content/Context;)V
    .locals 1
    .parameter "context"

    .prologue
    .line 174
    iget-object v0, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mFluencyServiceProxy:Lcom/touchtype_fluency/service/FluencyServiceProxy;

    invoke-virtual {v0, p1}, Lcom/touchtype_fluency/service/FluencyServiceProxy;->onDestroy(Landroid/content/Context;)V

    .line 175
    return-void
.end method

.method public removeShiftedAtStartFlag()V
    .locals 1

    .prologue
    .line 702
    const/4 v0, 0x0

    iput-boolean v0, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mShiftedAtStartOfFlow:Z

    .line 703
    return-void
.end method

.method public sendKeyCharReturnDeletesComposingRegion()Z
    .locals 1

    .prologue
    .line 774
    iget-boolean v0, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mSendKeyCharReturnDeletesComposingRegion:Z

    return v0
.end method

.method public setAlwaysComposeWordByWord(Z)V
    .locals 0
    .parameter "alwaysComposeWordByWord"

    .prologue
    .line 712
    iput-boolean p1, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mAlwaysComposeWordByWord:Z

    .line 713
    return-void
.end method

.method public setComposingRegionOnlyBeforeEdits()Z
    .locals 1

    .prologue
    .line 800
    iget-boolean v0, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mSetComposingRegionOnlyBeforeEdits:Z

    return v0
.end method

.method public setDisableQuickPeriod(Z)V
    .locals 0
    .parameter "disableQuickPeriod"

    .prologue
    .line 717
    iput-boolean p1, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mDisableQuickPeriod:Z

    .line 718
    return-void
.end method

.method public setDumbInputMode(Z)V
    .locals 0
    .parameter "dumb"

    .prologue
    .line 784
    iput-boolean p1, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mDumbInputMode:Z

    .line 785
    return-void
.end method

.method public setKeyPressModellingEnabled(Z)V
    .locals 0
    .parameter "enabled"

    .prologue
    .line 485
    iput-boolean p1, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mKeyPressModellingEnabled:Z

    .line 486
    return-void
.end method

.method public setNeverAutocomplete(Z)V
    .locals 0
    .parameter "neverAutocomplete"

    .prologue
    .line 707
    iput-boolean p1, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mNeverAutocomplete:Z

    .line 708
    return-void
.end method

.method public setShiftState(Lcom/touchtype/keyboard/service/TouchTypeSoftKeyboard$ShiftState;)V
    .locals 4
    .parameter "shiftState"

    .prologue
    .line 517
    iget-object v0, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mShiftState:Lcom/touchtype/keyboard/service/TouchTypeSoftKeyboard$ShiftState;

    iput-object v0, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mPreviousShiftState:Lcom/touchtype/keyboard/service/TouchTypeSoftKeyboard$ShiftState;

    .line 518
    const-string v0, "setShiftState -- shiftstate = %s; mIsCapsLockOn == %b"

    const/4 v1, 0x2

    new-array v1, v1, [Ljava/lang/Object;

    const/4 v2, 0x0

    invoke-virtual {p1}, Lcom/touchtype/keyboard/service/TouchTypeSoftKeyboard$ShiftState;->name()Ljava/lang/String;

    move-result-object v3

    aput-object v3, v1, v2

    const/4 v2, 0x1

    iget-boolean v3, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mIsCapsLockOn:Z

    invoke-static {v3}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    move-result-object v3

    aput-object v3, v1, v2

    invoke-static {v0, v1}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    .line 519
    iget-boolean v0, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mIsCapsLockOn:Z

    if-eqz v0, :cond_0

    sget-object p1, Lcom/touchtype/keyboard/service/TouchTypeSoftKeyboard$ShiftState;->CAPSLOCKED:Lcom/touchtype/keyboard/service/TouchTypeSoftKeyboard$ShiftState;

    .end local p1
    :cond_0
    iput-object p1, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mShiftState:Lcom/touchtype/keyboard/service/TouchTypeSoftKeyboard$ShiftState;

    .line 520
    iget-object v0, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mListenerManager:Lcom/touchtype/keyboard/inputeventmodel/ListenerManager;

    iget-object v1, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mShiftState:Lcom/touchtype/keyboard/service/TouchTypeSoftKeyboard$ShiftState;

    invoke-virtual {v0, v1}, Lcom/touchtype/keyboard/inputeventmodel/ListenerManager;->notifyShiftStateChangedListeners(Lcom/touchtype/keyboard/service/TouchTypeSoftKeyboard$ShiftState;)V

    .line 521
    return-void
.end method

.method public setStorageAvailable(Z)V
    .locals 2
    .parameter "available"

    .prologue
    .line 834
    iput-boolean p1, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mStorageAvailable:Z

    .line 835
    iget-object v0, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mListenerManager:Lcom/touchtype/keyboard/inputeventmodel/ListenerManager;

    invoke-virtual {p0}, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->isPredictionEnabled()Z

    move-result v1

    invoke-virtual {v0, v1}, Lcom/touchtype/keyboard/inputeventmodel/ListenerManager;->notifyPredictionsEnabledListener(Z)V

    .line 836
    return-void
.end method

.method public setUseTelexConversionLayer(Z)V
    .locals 0
    .parameter "usingTelexConversionLayer"

    .prologue
    .line 722
    iput-boolean p1, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mUseTelexConversionLayer:Z

    .line 723
    return-void
.end method

.method public setUseZeroWidthSpace(Z)V
    .locals 0
    .parameter "usingZeroWidthSpace"

    .prologue
    .line 739
    iput-boolean p1, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mUseZeroWidthSpace:Z

    .line 740
    return-void
.end method

.method public shouldAutocomplete(Lcom/touchtype/keyboard/inputeventmodel/events/KeyInputEvent;)Z
    .locals 9
    .parameter "key"

    .prologue
    const/4 v5, 0x0

    const/4 v6, 0x1

    .line 184
    invoke-virtual {p1}, Lcom/touchtype/keyboard/inputeventmodel/events/KeyInputEvent;->getExtractedText()Lcom/touchtype_fluency/service/TouchTypeExtractedText;

    move-result-object v2

    .line 185
    .local v2, et:Lcom/touchtype_fluency/service/TouchTypeExtractedText;
    invoke-virtual {p1}, Lcom/touchtype/keyboard/inputeventmodel/events/KeyInputEvent;->getCharacter()C

    move-result v0

    .line 186
    .local v0, character:C
    invoke-virtual {p0}, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->getAutocompleteMode()I

    move-result v3

    .line 187
    .local v3, mode:I
    invoke-virtual {v2}, Lcom/touchtype_fluency/service/TouchTypeExtractedText;->getCurrentWord()Ljava/lang/CharSequence;

    move-result-object v7

    .line 188
    invoke-interface {v7}, Ljava/lang/CharSequence;->length()I

    move-result v1

    .line 191
    .local v1, currentWordLength:I
    invoke-virtual {v2}, Lcom/touchtype_fluency/service/TouchTypeExtractedText;->isLastCharacterWhitespace()Z

    move-result v7

    if-nez v7, :cond_0

    invoke-virtual {v2}, Lcom/touchtype_fluency/service/TouchTypeExtractedText;->getSelectionEnd()I

    move-result v7

    if-nez v7, :cond_4

    :cond_0
    move v4, v6

    .line 192
    .local v4, spaceBeforeCursor:Z
    :goto_0
    invoke-virtual {p0}, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->isLicenseValid()Z

    move-result v7

    if-eqz v7, :cond_5

    invoke-virtual {p0}, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->isPredictionEnabled()Z

    move-result v7

    if-eqz v7, :cond_5

    invoke-virtual {p0}, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->isCompletionModeEnabled()Z

    move-result v7

    if-nez v7, :cond_5

    iget-boolean v7, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mDumbInputMode:Z

    if-nez v7, :cond_5

    invoke-virtual {p1}, Lcom/touchtype/keyboard/inputeventmodel/events/KeyInputEvent;->insertingPrediction()Z

    move-result v7

    if-nez v7, :cond_5

    instance-of v7, p1, Lcom/touchtype/keyboard/inputeventmodel/events/SoftKeyInputEvent;

    if-nez v7, :cond_1

    iget-object v7, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mPreferences:Lcom/touchtype/preferences/SwiftKeyPreferences;

    invoke-interface {v7}, Lcom/touchtype/preferences/SwiftKeyPreferences;->isHardKeyboardSpacebarDisabled()Z

    move-result v7

    if-nez v7, :cond_5

    :cond_1
    iget v7, v2, Lcom/touchtype_fluency/service/TouchTypeExtractedText;->selectionStart:I

    iget v8, v2, Lcom/touchtype_fluency/service/TouchTypeExtractedText;->selectionEnd:I

    if-ne v7, v8, :cond_5

    const/4 v7, 0x2

    if-ne v3, v7, :cond_2

    if-gtz v1, :cond_3

    const/16 v7, 0x20

    if-ne v0, v7, :cond_2

    if-nez v4, :cond_3

    :cond_2
    if-ne v3, v6, :cond_5

    if-lez v1, :cond_5

    :cond_3
    iget-boolean v7, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mNeverAutocomplete:Z

    if-nez v7, :cond_5

    :goto_1
    return v6

    .end local v4           #spaceBeforeCursor:Z
    :cond_4
    move v4, v5

    .line 191
    goto :goto_0

    .restart local v4       #spaceBeforeCursor:Z
    :cond_5
    move v6, v5

    .line 192
    goto :goto_1
.end method

.method public textBeforeCursorWorks()Z
    .locals 1

    .prologue
    .line 814
    iget-boolean v0, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mTextBeforeCursorWorks:Z

    return v0
.end method

.method public textBoxSwitchingUpdatesSelection()Z
    .locals 1

    .prologue
    .line 829
    iget-boolean v0, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mTextBoxSwitchingUpdatesSelection:Z

    return v0
.end method

.method public updateMetaStateOnFlowBegun()V
    .locals 2

    .prologue
    .line 676
    iget-object v0, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mShiftState:Lcom/touchtype/keyboard/service/TouchTypeSoftKeyboard$ShiftState;

    sget-object v1, Lcom/touchtype/keyboard/service/TouchTypeSoftKeyboard$ShiftState;->SHIFTED:Lcom/touchtype/keyboard/service/TouchTypeSoftKeyboard$ShiftState;

    if-ne v0, v1, :cond_0

    .line 678
    const/4 v0, 0x1

    iput-boolean v0, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mShiftedAtStartOfFlow:Z

    .line 680
    sget-object v0, Lcom/touchtype/keyboard/service/TouchTypeSoftKeyboard$ShiftState;->UNSHIFTED:Lcom/touchtype/keyboard/service/TouchTypeSoftKeyboard$ShiftState;

    invoke-virtual {p0, v0}, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->setShiftState(Lcom/touchtype/keyboard/service/TouchTypeSoftKeyboard$ShiftState;)V

    .line 685
    :goto_0
    return-void

    .line 683
    :cond_0
    const/4 v0, 0x0

    iput-boolean v0, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mShiftedAtStartOfFlow:Z

    goto :goto_0
.end method

.method public updateMetaStateOnFlowComplete(Lcom/touchtype/keyboard/candidates/CandidatesUpdateRequestType;)V
    .locals 1
    .parameter "eventType"

    .prologue
    .line 689
    iget-boolean v0, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mShiftedAtStartOfFlow:Z

    if-eqz v0, :cond_0

    .line 690
    const/4 v0, 0x0

    iput-boolean v0, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mShiftedAtStartOfFlow:Z

    .line 694
    sget-object v0, Lcom/touchtype/keyboard/candidates/CandidatesUpdateRequestType;->FLOW_FAILED:Lcom/touchtype/keyboard/candidates/CandidatesUpdateRequestType;

    if-ne p1, v0, :cond_0

    .line 695
    sget-object v0, Lcom/touchtype/keyboard/service/TouchTypeSoftKeyboard$ShiftState;->SHIFTED:Lcom/touchtype/keyboard/service/TouchTypeSoftKeyboard$ShiftState;

    invoke-virtual {p0, v0}, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->setShiftState(Lcom/touchtype/keyboard/service/TouchTypeSoftKeyboard$ShiftState;)V

    .line 698
    :cond_0
    return-void
.end method

.method public updateMetaStateOnHardKeyDown(ILandroid/view/KeyEvent;)Z
    .locals 7
    .parameter "keyCode"
    .parameter "event"

    .prologue
    .line 546
    iget-wide v2, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mMetaState:J

    .line 547
    .local v2, oldMetaState:J
    iget-boolean v1, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mIsCapsLockOn:Z

    .line 549
    .local v1, oldCapsLockState:Z
    invoke-direct {p0, p2}, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->updateCapsLockState(Landroid/view/KeyEvent;)V

    .line 550
    invoke-virtual {p0}, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->getShiftState()Lcom/touchtype/keyboard/service/TouchTypeSoftKeyboard$ShiftState;

    move-result-object v0

    .line 552
    .local v0, newShiftState:Lcom/touchtype/keyboard/service/TouchTypeSoftKeyboard$ShiftState;
    iget-boolean v4, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mIsCapsLockOn:Z

    if-nez v4, :cond_1

    .line 553
    invoke-static {p1}, Landroid/view/KeyEvent;->isModifierKey(I)Z

    move-result v4

    if-nez v4, :cond_0

    iget-boolean v4, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mIsCapsLockOn:Z

    if-eq v1, v4, :cond_2

    .line 555
    :cond_0
    iget-wide v4, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mMetaState:J

    invoke-static {v4, v5, p1, p2}, Lcom/touchtype/keyboard/service/MetaKeyKeyListenerProxy;->handleKeyDown(JILandroid/view/KeyEvent;)J

    move-result-wide v4

    iput-wide v4, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mMetaState:J

    .line 556
    iget-wide v4, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mMetaState:J

    sget v6, Lcom/touchtype/keyboard/service/MetaKeyKeyListenerProxy;->META_SHIFT_ON:I

    invoke-static {v4, v5, v6}, Lcom/touchtype/keyboard/service/MetaKeyKeyListenerProxy;->getMetaState(JI)I

    move-result v4

    .line 557
    packed-switch v4, :pswitch_data_0

    .line 565
    :cond_1
    sget-object v0, Lcom/touchtype/keyboard/service/TouchTypeSoftKeyboard$ShiftState;->CAPSLOCKED:Lcom/touchtype/keyboard/service/TouchTypeSoftKeyboard$ShiftState;

    .line 569
    :cond_2
    :goto_0
    invoke-virtual {p0}, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->getShiftState()Lcom/touchtype/keyboard/service/TouchTypeSoftKeyboard$ShiftState;

    move-result-object v4

    if-eq v0, v4, :cond_3

    .line 570
    invoke-virtual {p0, v0}, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->setShiftState(Lcom/touchtype/keyboard/service/TouchTypeSoftKeyboard$ShiftState;)V

    .line 573
    :cond_3
    iget-wide v4, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mMetaState:J

    cmp-long v4, v2, v4

    if-eqz v4, :cond_4

    const/4 v4, 0x1

    :goto_1
    return v4

    .line 559
    :pswitch_0
    sget-object v0, Lcom/touchtype/keyboard/service/TouchTypeSoftKeyboard$ShiftState;->UNSHIFTED:Lcom/touchtype/keyboard/service/TouchTypeSoftKeyboard$ShiftState;

    .line 560
    goto :goto_0

    .line 562
    :pswitch_1
    sget-object v0, Lcom/touchtype/keyboard/service/TouchTypeSoftKeyboard$ShiftState;->SHIFTED:Lcom/touchtype/keyboard/service/TouchTypeSoftKeyboard$ShiftState;

    .line 563
    goto :goto_0

    .line 573
    :cond_4
    const/4 v4, 0x0

    goto :goto_1

    .line 557
    nop

    :pswitch_data_0
    .packed-switch 0x0
        :pswitch_0
        :pswitch_1
    .end packed-switch
.end method

.method public updateMetaStateOnHardKeyUp(ILandroid/view/KeyEvent;Lcom/touchtype/keyboard/inputeventmodel/InputConnectionProxy;)Z
    .locals 6
    .parameter "keyCode"
    .parameter "event"
    .parameter "icProxy"

    .prologue
    .line 578
    iget-wide v1, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mMetaState:J

    .line 579
    .local v1, oldState:J
    invoke-static {p1}, Landroid/view/KeyEvent;->isModifierKey(I)Z

    move-result v3

    if-eqz v3, :cond_3

    .line 581
    iget-wide v3, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mMetaState:J

    invoke-static {v3, v4, p1, p2}, Lcom/touchtype/keyboard/service/MetaKeyKeyListenerProxy;->handleKeyUp(JILandroid/view/KeyEvent;)J

    move-result-wide v3

    iput-wide v3, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mMetaState:J

    .line 589
    :goto_0
    const/4 v0, 0x0

    .line 590
    .local v0, cleared:I
    iget-wide v3, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mMetaState:J

    sget v5, Lcom/touchtype/keyboard/service/MetaKeyKeyListenerProxy;->META_SHIFT_ON:I

    invoke-static {v3, v4, v5}, Lcom/touchtype/keyboard/service/MetaKeyKeyListenerProxy;->getMetaState(JI)I

    move-result v3

    if-nez v3, :cond_0

    .line 591
    const/4 v0, 0x1

    .line 593
    :cond_0
    iget-wide v3, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mMetaState:J

    sget v5, Lcom/touchtype/keyboard/service/MetaKeyKeyListenerProxy;->META_ALT_ON:I

    invoke-static {v3, v4, v5}, Lcom/touchtype/keyboard/service/MetaKeyKeyListenerProxy;->getMetaState(JI)I

    move-result v3

    if-nez v3, :cond_1

    .line 594
    or-int/lit8 v0, v0, 0x2

    .line 596
    :cond_1
    iget-wide v3, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mMetaState:J

    sget v5, Lcom/touchtype/keyboard/service/MetaKeyKeyListenerProxy;->META_SYM_ON:I

    invoke-static {v3, v4, v5}, Lcom/touchtype/keyboard/service/MetaKeyKeyListenerProxy;->getMetaState(JI)I

    move-result v3

    if-nez v3, :cond_2

    .line 597
    or-int/lit8 v0, v0, 0x4

    .line 599
    :cond_2
    invoke-interface {p3, v0}, Lcom/touchtype/keyboard/inputeventmodel/InputConnectionProxy;->clearMetaKeyStates(I)Z

    .line 601
    iget-wide v3, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mMetaState:J

    cmp-long v3, v1, v3

    if-eqz v3, :cond_4

    const/4 v3, 0x1

    :goto_1
    return v3

    .line 585
    .end local v0           #cleared:I
    :cond_3
    iget-wide v3, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mMetaState:J

    invoke-static {v3, v4}, Lcom/touchtype/keyboard/service/MetaKeyKeyListenerProxy;->adjustMetaAfterKeypress(J)J

    move-result-wide v3

    iput-wide v3, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mMetaState:J

    goto :goto_0

    .line 601
    .restart local v0       #cleared:I
    :cond_4
    const/4 v3, 0x0

    goto :goto_1
.end method

.method public updateMetaStateOnSoftKeyDown(ILandroid/view/KeyEvent;)V
    .locals 3
    .parameter "keyCode"
    .parameter "event"

    .prologue
    .line 606
    iget-object v0, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mShiftState:Lcom/touchtype/keyboard/service/TouchTypeSoftKeyboard$ShiftState;

    .line 607
    .local v0, currentShiftState:Lcom/touchtype/keyboard/service/TouchTypeSoftKeyboard$ShiftState;
    const/4 v1, -0x1

    if-ne p1, v1, :cond_2

    .line 608
    const/4 v1, 0x1

    iput-boolean v1, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mSoftShiftPressed:Z

    .line 609
    sget-object v1, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl$2;->$SwitchMap$com$touchtype$keyboard$service$TouchTypeSoftKeyboard$ShiftState:[I

    invoke-virtual {v0}, Lcom/touchtype/keyboard/service/TouchTypeSoftKeyboard$ShiftState;->ordinal()I

    move-result v2

    aget v1, v1, v2

    packed-switch v1, :pswitch_data_0

    .line 646
    :cond_0
    :goto_0
    return-void

    .line 612
    :pswitch_0
    invoke-virtual {p0}, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->getShiftMode()Lcom/touchtype/keyboard/inputeventmodel/KeyboardState$ShiftMode;

    move-result-object v1

    sget-object v2, Lcom/touchtype/keyboard/inputeventmodel/KeyboardState$ShiftMode;->CHARACTERS:Lcom/touchtype/keyboard/inputeventmodel/KeyboardState$ShiftMode;

    if-ne v1, v2, :cond_1

    .line 613
    sget-object v1, Lcom/touchtype/keyboard/service/TouchTypeSoftKeyboard$ShiftState;->CAPSLOCKED:Lcom/touchtype/keyboard/service/TouchTypeSoftKeyboard$ShiftState;

    invoke-virtual {p0, v1}, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->setShiftState(Lcom/touchtype/keyboard/service/TouchTypeSoftKeyboard$ShiftState;)V

    goto :goto_0

    .line 615
    :cond_1
    sget-object v1, Lcom/touchtype/keyboard/service/TouchTypeSoftKeyboard$ShiftState;->SHIFTED:Lcom/touchtype/keyboard/service/TouchTypeSoftKeyboard$ShiftState;

    invoke-virtual {p0, v1}, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->setShiftState(Lcom/touchtype/keyboard/service/TouchTypeSoftKeyboard$ShiftState;)V

    goto :goto_0

    .line 619
    :pswitch_1
    sget-object v1, Lcom/touchtype/keyboard/service/TouchTypeSoftKeyboard$ShiftState;->CAPSLOCKED:Lcom/touchtype/keyboard/service/TouchTypeSoftKeyboard$ShiftState;

    invoke-virtual {p0, v1}, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->setShiftState(Lcom/touchtype/keyboard/service/TouchTypeSoftKeyboard$ShiftState;)V

    goto :goto_0

    .line 622
    :pswitch_2
    sget-object v1, Lcom/touchtype/keyboard/service/TouchTypeSoftKeyboard$ShiftState;->UNSHIFTED:Lcom/touchtype/keyboard/service/TouchTypeSoftKeyboard$ShiftState;

    invoke-virtual {p0, v1}, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->setShiftState(Lcom/touchtype/keyboard/service/TouchTypeSoftKeyboard$ShiftState;)V

    goto :goto_0

    .line 625
    :cond_2
    iget-boolean v1, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mSoftShiftPressed:Z

    if-eqz v1, :cond_0

    iget-object v1, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mSoftChordShift:Lcom/touchtype/keyboard/inputeventmodel/KeyboardState$ChordedShift;

    sget-object v2, Lcom/touchtype/keyboard/inputeventmodel/KeyboardState$ChordedShift;->NONE:Lcom/touchtype/keyboard/inputeventmodel/KeyboardState$ChordedShift;

    if-ne v1, v2, :cond_0

    .line 628
    sget-object v1, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl$2;->$SwitchMap$com$touchtype$keyboard$service$TouchTypeSoftKeyboard$ShiftState:[I

    invoke-virtual {v0}, Lcom/touchtype/keyboard/service/TouchTypeSoftKeyboard$ShiftState;->ordinal()I

    move-result v2

    aget v1, v1, v2

    packed-switch v1, :pswitch_data_1

    goto :goto_0

    .line 631
    :pswitch_3
    sget-object v1, Lcom/touchtype/keyboard/inputeventmodel/KeyboardState$ChordedShift;->LOWER:Lcom/touchtype/keyboard/inputeventmodel/KeyboardState$ChordedShift;

    iput-object v1, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mSoftChordShift:Lcom/touchtype/keyboard/inputeventmodel/KeyboardState$ChordedShift;

    goto :goto_0

    .line 635
    :pswitch_4
    sget-object v1, Lcom/touchtype/keyboard/inputeventmodel/KeyboardState$ChordedShift;->UPPER:Lcom/touchtype/keyboard/inputeventmodel/KeyboardState$ChordedShift;

    iput-object v1, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mSoftChordShift:Lcom/touchtype/keyboard/inputeventmodel/KeyboardState$ChordedShift;

    .line 637
    sget-object v1, Lcom/touchtype/keyboard/service/TouchTypeSoftKeyboard$ShiftState;->CAPSLOCKED:Lcom/touchtype/keyboard/service/TouchTypeSoftKeyboard$ShiftState;

    invoke-virtual {p0, v1}, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->setShiftState(Lcom/touchtype/keyboard/service/TouchTypeSoftKeyboard$ShiftState;)V

    goto :goto_0

    .line 641
    :pswitch_5
    sget-object v1, Lcom/touchtype/keyboard/inputeventmodel/KeyboardState$ChordedShift;->UPPER:Lcom/touchtype/keyboard/inputeventmodel/KeyboardState$ChordedShift;

    iput-object v1, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mSoftChordShift:Lcom/touchtype/keyboard/inputeventmodel/KeyboardState$ChordedShift;

    goto :goto_0

    .line 609
    :pswitch_data_0
    .packed-switch 0x1
        :pswitch_0
        :pswitch_1
        :pswitch_2
    .end packed-switch

    .line 628
    :pswitch_data_1
    .packed-switch 0x1
        :pswitch_3
        :pswitch_4
        :pswitch_5
    .end packed-switch
.end method

.method public updateMetaStateOnSoftKeyUp(ILandroid/view/KeyEvent;Lcom/touchtype/keyboard/inputeventmodel/InputConnectionProxy;)V
    .locals 2
    .parameter "keyCode"
    .parameter "event"
    .parameter "icProxy"

    .prologue
    .line 656
    const/4 v0, -0x1

    if-ne p1, v0, :cond_0

    .line 657
    const/4 v0, 0x0

    iput-boolean v0, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mSoftShiftPressed:Z

    .line 659
    iget-object v0, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mSoftChordShift:Lcom/touchtype/keyboard/inputeventmodel/KeyboardState$ChordedShift;

    sget-object v1, Lcom/touchtype/keyboard/inputeventmodel/KeyboardState$ChordedShift;->NONE:Lcom/touchtype/keyboard/inputeventmodel/KeyboardState$ChordedShift;

    if-eq v0, v1, :cond_2

    .line 661
    iget-object v0, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mSoftChordShift:Lcom/touchtype/keyboard/inputeventmodel/KeyboardState$ChordedShift;

    sget-object v1, Lcom/touchtype/keyboard/inputeventmodel/KeyboardState$ChordedShift;->UPPER:Lcom/touchtype/keyboard/inputeventmodel/KeyboardState$ChordedShift;

    if-ne v0, v1, :cond_1

    .line 662
    sget-object v0, Lcom/touchtype/keyboard/service/TouchTypeSoftKeyboard$ShiftState;->UNSHIFTED:Lcom/touchtype/keyboard/service/TouchTypeSoftKeyboard$ShiftState;

    invoke-virtual {p0, v0}, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->setShiftState(Lcom/touchtype/keyboard/service/TouchTypeSoftKeyboard$ShiftState;)V

    .line 665
    :goto_0
    sget-object v0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardState$ChordedShift;->NONE:Lcom/touchtype/keyboard/inputeventmodel/KeyboardState$ChordedShift;

    iput-object v0, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mSoftChordShift:Lcom/touchtype/keyboard/inputeventmodel/KeyboardState$ChordedShift;

    .line 672
    :cond_0
    :goto_1
    return-void

    .line 664
    :cond_1
    sget-object v0, Lcom/touchtype/keyboard/service/TouchTypeSoftKeyboard$ShiftState;->CAPSLOCKED:Lcom/touchtype/keyboard/service/TouchTypeSoftKeyboard$ShiftState;

    invoke-virtual {p0, v0}, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->setShiftState(Lcom/touchtype/keyboard/service/TouchTypeSoftKeyboard$ShiftState;)V

    goto :goto_0

    .line 667
    :cond_2
    invoke-virtual {p2}, Landroid/view/KeyEvent;->getFlags()I

    move-result v0

    and-int/lit8 v0, v0, 0x20

    const/16 v1, 0x20

    if-ne v0, v1, :cond_0

    .line 668
    iget-object v0, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mPreviousShiftState:Lcom/touchtype/keyboard/service/TouchTypeSoftKeyboard$ShiftState;

    invoke-virtual {p0, v0}, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->setShiftState(Lcom/touchtype/keyboard/service/TouchTypeSoftKeyboard$ShiftState;)V

    goto :goto_1
.end method

.method public useShortTextBeforeAfterCursor()Z
    .locals 1

    .prologue
    .line 824
    iget-boolean v0, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mUseShortTextBeforeAfterCursor:Z

    return v0
.end method

.method public useTelexConversionLayer()Z
    .locals 1

    .prologue
    .line 734
    iget-boolean v0, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mUseTelexConversionLayer:Z

    if-eqz v0, :cond_0

    iget-boolean v0, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mEditorIsPasswordField:Z

    if-nez v0, :cond_0

    const/4 v0, 0x1

    :goto_0
    return v0

    :cond_0
    const/4 v0, 0x0

    goto :goto_0
.end method

.method public useTransactionsForSelectionEvents()Z
    .locals 1

    .prologue
    .line 819
    iget-boolean v0, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mUseTransactionsForSelectionEvents:Z

    return v0
.end method

.method public useZeroWidthSpace()Z
    .locals 1

    .prologue
    .line 744
    iget-boolean v0, p0, Lcom/touchtype/keyboard/inputeventmodel/KeyboardStateImpl;->mUseZeroWidthSpace:Z

    return v0
.end method
